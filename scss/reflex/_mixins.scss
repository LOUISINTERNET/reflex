// --------------------------------------------------
// reflex mixins
// --------------------------------------------------
//
// --------------------------------------------------
// reflex grid generation mixins
// --------------------------------------------------

@mixin make-reflex-grid($class) {
  @include loop-reflex-columns($reflex-columns, $class, width);
}

@mixin calc-reflex-columns($index, $class, $type) {
  @if $type == width and $index > 0 {
    .#{$reflex-prefix}#{$class}#{$index} {
      width: percentage(($index / $reflex-columns));
    }
  }
}

@mixin loop-reflex-columns($index, $class, $type) {
  @if $index >= 0 {
    @include calc-reflex-columns($index, $class, $type);
    // next iteration
    @include loop-reflex-columns(($index - 1), $class, $type);
  }
}

// defaults for all cols
@mixin setupCols($flex: false) {
  @include whitespace();
  position: relative;
  width: 100%;
  vertical-align: top;
  padding: $reflex-grid-spacing;

  @if $flex {
    @include display-flex();
    flex-direction: column;
  } @else {
    display: inline-block;
    *display: inline;
    zoom: 1;
  }
}

// defaults for auto cols
@mixin setupAutoCols() {
  flex: 1 0 auto;
  width: auto !important;
  max-width: 100%;
}

// --------------------------------------------------
// inline-block specific mixins
// --------------------------------------------------

@mixin whitespace($reset: true) {
  @if $reflex-old-browser {
    @if $reset {
      letter-spacing: normal;
      word-spacing: normal;
      white-space: normal;
    } @else {
      letter-spacing: -0.31em !important;
      *letter-spacing: normal !important;
      word-spacing: -0.43em !important;
    }
  }
}

@mixin resetTextAlign() {
  @if $reflex-old-browser {
    // We want to reset any text-align properties set by the grid
    // (required for the inline-block fallback)
    // but we don't want to override any text-align properties
    // set on the individual grid__col-x element
    // or on any of it's child elements
    //
    // The "initial" property is not widely supported so a default of "left" and "start" is provided
    // http://caniuse.com/#search=initial
    //
    // 1) set to left by default (works everywhere)
    // 2) set to start (respects right to left text)
    // 3) set to initial

    text-align: left;
    text-align: start;
    text-align: initial;
    text-align-last: left;
    text-align-last: start;
    text-align-last: initial;
  }
}

// --------------------------------------------------
// order class generation mixins
// --------------------------------------------------

@mixin make-grid--order-helpers() {
  @include loop-grid--order-helpers($reflex-columns);
}

@mixin loop-grid--order-helpers($index, $breakpoint: null) {
  @if $index >= 0 {
    .#{$reflex-prefix}grid--order#{$breakpoint}-#{$index} {
      order: $index;
    }
    // next iteration
    @include loop-grid--order-helpers(($index - 1), $breakpoint);
  }
}

// --------------------------------------------------
// offset class generation mixins
// --------------------------------------------------

@mixin offset($index: 0) {
  $offset: ($index / $reflex-columns);
  // convert to percentage only if not zero
  @if $offset != 0 {
    $offset: percentage($offset);
  }
  margin-left: $offset;
}

@mixin make-offset-helpers() {
  @include loop-offset-helpers($reflex-columns - 1);
}

@mixin loop-offset-helpers($index, $breakpoint: null) {
  @if $index > 0 and $breakpoint == null {
    .#{$reflex-prefix}grid--offset#{$breakpoint}-#{$index} {
      @include offset($index);
    }
    // next iteration
    @include loop-offset-helpers(($index - 1), $breakpoint);
  } @else if $index >= 0 and $breakpoint != null {
    .#{$reflex-prefix}grid--offset#{$breakpoint}-#{$index} {
      @include offset($index);
    }
    // next iteration
    @include loop-offset-helpers(($index - 1), $breakpoint);
  }
}

// --------------------------------------------------
// reflex modifier mixins
// --------------------------------------------------

//
// display
// ---

@mixin display-flex() {
  display: inline-block;
  display: flex;
  *display: inline;
  zoom: 1;
}
